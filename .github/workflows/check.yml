name: Check

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - synchronize
  push:
    branches:
      - main

# env:
#   CACHE_NAME: cache-node-modules

jobs:
  lint:
    name: Lint and Typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Enable Corepack because of the Yarn Berry
        run: corepack enable

      - name: Setup Latest Yarn
        uses: threeal/setup-yarn-action@v2.0.0
        with:
          version: latest

      # - name: Set Yarn to Berry version
      #   run: yarn set version berry
      # - name: Restore Turbo Cache
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       .yarn/cache
      #       node_modules
      #       .cache
      #       .turbo
      #     key: ${{ runner.os }}-turbo-${{ github.sha}}
      #     restore-keys: |
      #       ${{ runner.os }}-turbo-
      # - name: Get yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "yarn_cache_dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      # - name: Cache node modules
      #   id: cache-yarn
      #   uses: actions/cache@v4
      #   with:
      #     path: .yarn/cache
      #     key: default-yarndeps-${{ hashFiles('yarn.lock') }}
      #   with:
      #     # Below is an another cache folder on ubuntu
      #     # path: ~/.cache/yarn
      #     path: .yarn/cache
      #     # path: ${{ steps.yarn-cache-dir-path.outputs.yarn_cache_dir }}
      #     key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}\
      #       -${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-
      #       ${{ runner.os }}-build-
      #       ${{ runner.os }}-
      # - if: ${{ steps.cache-yarn.outputs.cache-hit != 'true' }}
      # name: Info the state of node modules
      # continue-on-error: true
      # run: yarn info --name-only
      # - name: Install Dependencies
      #   run: yarn install --immutable
      # run: npm i

      - name: Run ESLint
        run: yarn lint

      # - name: Run TypeScript
      #   run: yarn typecheck
      # run: npm run typecheck

  # test:
  #   name: Tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Enable Corepack before setting up Node
  #       run: corepack enable

  #     - name: Set Yarn to Berry version
  #       run: yarn set version berry

  #     - name: Create .yarnrc.yml file
  #       # run: echo "enableGlobalCache: true" > .yarnrc.yml
  #       run: |
  #         echo "enableGlobalCache: true" > .yarnrc.yml

  #     - name: Get yarn cache directory path
  #       id: yarn-cache-dir-path
  #       run: echo "yarn_cache_dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

  #     - name: Cache node modules
  #       id: cache-yarn
  #       uses: actions/cache@v4
  #       with:
  #         # Below is an another cache folder on ubuntu
  #         # path: ~/.cache/yarn
  #         path: .yarn/cache
  #         # path: ${{ steps.yarn-cache-dir-path.outputs.yarn_cache_dir }}
  #         key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-build-${{ env.CACHE_NAME }}-
  #           ${{ runner.os }}-build-
  #           ${{ runner.os }}-

  #     - if: ${{ steps.cache-yarn.outputs.cache-hit != 'true' }}
  #       name: Info the state of node modules
  #       continue-on-error: true
  #       run: yarn info --name-only

  #     - name: Install Dependencies
  #       run: yarn install --immutable

  #     - name: Run Tests
  #       run: yarn test
